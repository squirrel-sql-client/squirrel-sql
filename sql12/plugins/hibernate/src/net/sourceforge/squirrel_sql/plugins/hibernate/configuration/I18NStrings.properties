HibernatePrefsTab.title=Hibernate
HibernatePrefsTab.hint=Hibernate configurations


HibernatePanel.config=Configuration
HibernatePanel.newConfig=New
HibernatePanel.newConfig.tooltip=Create a new Hibernate configuration

HibernatePanel.FactoryProvider=SessionFactoryImpl provider

HibernatePanel.classPathAdd=Add classpath entry
HibernatePanel.classPathAdd.filechooser.title=Choose classpath entry
HibernatePanel.classPathDirAdd=Add archive files directory
HibernatePanel.classPathAddFromClip=Add classpath from clipboard
HibernatePanel.classPathAddFromClip.tooltip=Classpath entries may be separated by OS dependent classpath separators and/or newlines
HibernatePanel.classPathDirAdd.filechooser.title=Choose archive files directory
HibernatePanel.classPathRemove.tooltip=Remove selected classpath entries

HibernatePanel.ConfiguirationDef=Configuration definition

HibernatePanel.classpath.of.hibernat.libs.and.entities=Classpath of Hibernate libraries and entities:
HibernatePanel.configName=Configuration name

HibernateController.classpathEntryDesc=Jars, Zips or directories

HibernateController.classpathDirEntryDesc=Directories containing archive files (Jars, Zips)

FactoryProviderDialog.title=Name of SessionFactorImpl provider

FactoryProviderDialog.desc=Please enter the fully qualified class name of a SessionFactorImpl provider class. The compiled class file must be in one of your additional classpath entries.

FactoryProviderDialog.example=Save example code for a SessionFactorImpl provider class to ...

FactoryProviderController.fileCreated=File {0} has been successfully created.

FactoryProviderController.fileCreateFailed=File {0} could not be created: {1}

FactoryProviderDialog.ok=OK
FactoryProviderDialog.cancel=Cancel


HibernatePanel.removeFactoryProvider=Remove

HibernatePanel.removeConfig=Remove
HibernatePanel.removeConfig.tooltip=Remove the selected Hibernate configuration

HibernatePanel.copyConfig.tooltip=Copy the selected Hibernate configuration

CopyConfigDlg.copy.config.enter.new.config.name=Enter name of copied configuration
CopyConfigDlg.copy.config.enter.new.config.name.title=Name of copied configuration

CopyConfigDlg.ok=OK
CopyConfigDlg.cancel=Cancel
CopyConfigCtrl.copy.config.name.must.not.be.empty=Name must not be empty
CopyConfigCtrl.copy.config.name.exists=The name already exists

HibernatePanel.applyConfigChanges=Apply changes to this configuration

HibernatePanel.editFactoryProvider=Edit

HibernateController.noCfgNameMsg=Not a valid configuration name\nChanges cannot be applied.

HibernateController.noProviderMsg=Missing SessionFactoryImplProvider .\nChanges cannot be applied.

HibernateController.ReallyRemoveConfig=Are you sure you want to delete configuration "{0}".
HibernateController.NoConfigToRemove=No configuration selected to remove.

HibernateController.NoConfigToCopy=No configuration selected to copy.

HibernatePanel.toObtainSessionFact=To obtain a Hibernate SessionFactoryImpl instance SQuirreL should:

HibernatePanel.toObtainSessionFactConfiguration=Call "new org.hibernate.cfg.Configuration().configure().buildSessionFactory();"
HibernatePanel.toObtainSessionFactFactoryProvider=Invoke the user defined provider method below:

HibernateController.noPersistenceUnitName=Missing Persitence-Unit name .\nChanges cannot be applied.

HibernatePanel.toObtainSessionFactJPA=Call "javax.persistence.Persistence.createEntityManagerFactory("<persitence-unit name>");"
HibernatePanel.toObtainSessionFactPersUnit=Persistence unit name:

HibernatePanel.moveUp=Move up
HibernatePanel.moveUp.tooltip=Move selected classpath entries up
HibernatePanel.moveDown=Move down
HibernatePanel.moveDown.tooltip=Move selected classpath entries down

HibernatePanel.classpath.replace.tooltip=Replace selected classpath entry

HibernatePanel.howToAccess=Memory usage: To access Hibernate SQuirreL should:
HibernateConfigPanel.createProcess=Launch a process that runs Hibernate (lower memory usage)
HibernateConfigPanel.createProcessDetails=Details ...
HibernateConfigPanel.inVM=Run Hibernate in SQuirreL's Java VM (higher memory usage)

ProcessDetailsController.missingCommand=Please enter a command.

ProcessDetailsController.noPort=Please enter a command that ends with -port:<port number>. E.g. -port:23366
ProcessDetailsController.invalidPortNumber:Please enter a port that is a valid number.

ProcessDetailsDialog.title=Process details

ProcessDetailsDialog.processDesc=Launching Hibernate in its own process can keep SQuirreL from running out of memory. To launch the process SQuirreL will execute the following command (note the port paramter at the end):

ProcessDetailsDialog.restoreDefault=Restore default
ProcessDetailsDialog.restoreDefault.run.in.console=Restore default to run in console


ProcessDetailsDialog.RefreshRealCmnd=Refresh
ProcessDetailsDialog.RefreshRealCmndCopyToClip=Copy to clipboard

ProcessDetailsDialog.endProcessDesc=By default SQuirreL will launch/end the process when a Hibernate configuration is connected/disconnected. You can prevent SQuirreL from ending the process. SQuirreL will then try to attach to this process on connect. If this fails SQuirreL will again launch a process. (Note: This option also allows you to launch the process yourself.)

ProcessDetailsDialog.chkEndProcess=Launch/end process on connect/disconnect

ProcessDetailsDialog.ok=OK
ProcessDetailsDialog.cancel=Cancel

HibernatePanel.information=Information:

HibernatePanel.describeJPA=Minimum supported Hibernate version is 5.2.\n\n\
Your classpath must contain:\n\
- The Hibernate libraries you are using\n\
- The entity classes\n\
- A file named "persistence.xml" inside a directory called META-INF. JPA and Jakarta Persistence examples of this file can be found below.\n\
\n\
To connect Hibernate SQuirreL will try JPA and call "javax.persistence.Persistence.createEntityManagerFactory("<Persitence unit name>");"\n\
when this fails SQuirreL will try Jakarta Persistence and call "jakarta.persistence.Persistence.createEntityManagerFactory("<Persitence unit name>");"\n\
\n\
Example JPA persistence.xml file:\n\
<?xml version="1.0" encoding="UTF-8"?>\n\
<persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">\n\
<persistence-unit name="PersistenceUnitName">\n\
<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\n\
<class>fully.qualified.name.of.Entity1</class>\n\
...\n\
<class>fully.qualified.name.of.EntityN</class>\n\
<properties>\n\
<property name="javax.persistence.jdbc.driver" value="driver.class.name" />\n\
<property name="javax.persistence.jdbc.url" value="JDBC-URL" />\n\
<property name="javax.persistence.jdbc.user" value="databaseUser" />\n\
<property name="javax.persistence.jdbc.password" value="databasePassword" />\n\
<property name="hibernate.dialect" value="databaseHibernateDialect" />\n\
</properties>\n\
</persistence-unit>\n\
</persistence>\n\
\n\n\
Example Jakarta Persistence persistence.xml file:\n\
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\
<persistence version="3.0"\n\
xmlns="https://jakarta.ee/xml/ns/persistence"\n\
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n\
xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd">\n\
<persistence-unit name="PersistenceUnitName">\n\
<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\n\
<class>fully.qualified.name.of.Entity1</class>\n\
...\n\
<class>fully.qualified.name.of.EntityN</class>\n\
<properties>\n\
<property name="jakarta.persistence.jdbc.driver" value="driver.class.name" />\n\
<property name="jakarta.persistence.jdbc.url" value="JDBC-URL" />\n\
<property name="jakarta.persistence.jdbc.user" value="databaseUser" />\n\
<property name="jakarta.persistence.jdbc.password" value="databasePassword" />\n\
<property name="hibernate.dialect" value="databaseHibernateDialect" />\n\
</properties>\n\
</persistence-unit>\n\
</persistence>


HibernatePanel.classPathReplace.no.selection=Please select the classpath entry to replace